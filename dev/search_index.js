var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Moshi","category":"page"},{"location":"#Moshi","page":"Home","title":"Moshi","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Moshi.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Moshi]","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Moshi.Data]","category":"page"},{"location":"#Moshi.Data.Self","page":"Home","title":"Moshi.Data.Self","text":"Syntax placeholder for self type.\n\n\n\n\n\n","category":"constant"},{"location":"#Moshi.Data.convert_singleton_bottom-Union{Tuple{T}, Tuple{Type{T}, Any}} where T","page":"Home","title":"Moshi.Data.convert_singleton_bottom","text":"Convert a singleton variant with Union{} as type parameters to a matching singleton variant with the correct type parameters.\n\nnote: Note\nBase.convert(::Type{YourData.Type}, x::YourData.Type{Union{}}) fall back to this method so it can be overloaded if necessary. This method fallback to a generated method by @data by default.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.data_type_name-Tuple{Any}","page":"Home","title":"Moshi.Data.data_type_name","text":"public Moshi.Data.data_type_name(x) -> Symbol\n\nReturn the data type name of the given variant.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.is_data_type-Tuple{Any}","page":"Home","title":"Moshi.Data.is_data_type","text":"public Moshi.Data.is_data_type(x) -> Bool\n\nCheck if the given object is a variant of a algebraic data type.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.isa_variant-Tuple{Any, Type}","page":"Home","title":"Moshi.Data.isa_variant","text":"public Moshi.Data.isa_variant(x, variant::Type) -> Bool\n\nCheck if the given variant is an instance of the given variant type.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.show_variant-Tuple{IO, Any}","page":"Home","title":"Moshi.Data.show_variant","text":"public Moshi.Data.show_variant(io::IO, x)\n\nPrint the variant to the given IO stream in a single line.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.show_variant-Tuple{IO, MIME{Symbol(\"text/plain\")}, Any}","page":"Home","title":"Moshi.Data.show_variant","text":"public Moshi.Data.show_variant(io::IO, x)\n\nPrint the variant to the given IO stream in multiple lines.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.variant_fieldnames-Tuple{Any}","page":"Home","title":"Moshi.Data.variant_fieldnames","text":"public Moshi.Data.variant_fieldnames(value)\n\nReturn the field names of the variant.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.variant_fieldtypes-Tuple{Type}","page":"Home","title":"Moshi.Data.variant_fieldtypes","text":"public Moshi.Data.variant_fieldtypes(value)\n\nReturn the field types of the variant.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.variant_kind-Tuple{Any}","page":"Home","title":"Moshi.Data.variant_kind","text":"public Moshi.Data.variant_kind(x) -> VariantKind\n\nReturn the kind of the variant, can be Singleton, Anonymous, or Named.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.variant_name-Tuple{Any}","page":"Home","title":"Moshi.Data.variant_name","text":"public Moshi.Data.variant_name(x) -> Symbol\n\nReturn the name of the variant.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.variant_storage-Tuple{Any}","page":"Home","title":"Moshi.Data.variant_storage","text":"public Moshi.Data.variant_storage(value)\n\nReturn the storage object of the variant.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.variant_type-Tuple{Any}","page":"Home","title":"Moshi.Data.variant_type","text":"public Moshi.Data.variant_type(x)\n\nReturn the variant type of the given variant.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.variants-Tuple{Any}","page":"Home","title":"Moshi.Data.variants","text":"public Moshi.Data.variants(x::Type) -> Tuple\n\nReturn a tuple of variants of the given data type.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.variants-Tuple{Type}","page":"Home","title":"Moshi.Data.variants","text":"public Moshi.Data.variants(x::Type) -> Tuple\n\nReturn a tuple of variants of the given data type.\n\n\n\n\n\n","category":"method"},{"location":"#Moshi.Data.@data-Tuple{Any, Any}","page":"Home","title":"Moshi.Data.@data","text":"@data <head> <variants>\n\nCreate a new algebraic data type (also known as a sum type) with the given head and variants.\n\n\n\n\n\n","category":"macro"},{"location":"#Moshi.Data.@pass-Tuple{Any}","page":"Home","title":"Moshi.Data.@pass","text":"@pass [priority] <function definition>\n\nAdd a function to the list of functions to be called when emitting code.\n\nOptionally, you can specify a priority for the function. The default priority is 5. Lower priority number functions are called first.\n\n\n\n\n\n","category":"macro"},{"location":"","page":"Home","title":"Home","text":"Modules = [Moshi.Derive]","category":"page"},{"location":"#Moshi.Derive.@derive-Tuple{Any}","page":"Home","title":"Moshi.Derive.@derive","text":"@derive <type>[<traits>...]\n\nAutomatically derive traits for a concrete type. The following traits are supported:\n\nPartialEq\nHash\nTree\n\n\n\n\n\n","category":"macro"},{"location":"","page":"Home","title":"Home","text":"Modules = [Moshi.Match]","category":"page"}]
}
